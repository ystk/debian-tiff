Description: fix CVE-2015-8784: potential out-of-bound write in NeXTDecode()
 Patch adopted from upstream commit b18012dae552f85dcc5c57d3bf4e997a15b1cc1c
 triggered by http://lcamtuf.coredump.cx/afl/vulns/libtiff5.tif
Bug: http://bugzilla.maptools.org/show_bug.cgi?id=2508
Author: Even Rouault <even.rouault at spatialys.com>
Reviewed-by: Damyan Ivanov <dmn@debian.org>

--- a/libtiff/tif_next.c
+++ b/libtiff/tif_next.c
@@ -37,7 +37,7 @@
 	case 0:	op[0]  = (unsigned char) ((v) << 6); break;	\
 	case 1:	op[0] |= (v) << 4; break;	\
 	case 2:	op[0] |= (v) << 2; break;	\
-	case 3:	*op++ |= (v);	   break;	\
+	case 3:	*op++ |= (v);	   op_offset++; break;	\
 	}					\
 }
 
@@ -48,6 +48,7 @@
 static int
 NeXTDecode(TIFF* tif, tidata_t buf, tsize_t occ, tsample_t s)
 {
+	static const char module[] = "NeXTDecode";
 	unsigned char *bp, *op;
 	tsize_t cc;
 	tidata_t row;
@@ -100,6 +101,7 @@ NeXTDecode(TIFF* tif, tidata_t buf, tsiz
 			uint32 imagewidth = tif->tif_dir.td_imagewidth;
             if( isTiled(tif) )
                 imagewidth = tif->tif_dir.td_tilewidth;
+                tsize_t op_offset = 0;
 
 			/*
 			 * The scanline is composed of a sequence of constant
@@ -116,10 +118,15 @@ NeXTDecode(TIFF* tif, tidata_t buf, tsiz
 				 * bounds, potentially resulting in a security
 				 * issue.
 				 */
-				while (n-- > 0 && npixels < imagewidth)
+				while (n-- > 0 && npixels < imagewidth && op_offset < scanline)
 					SETPIXEL(op, grey);
 				if (npixels >= imagewidth)
 					break;
+                if (op_offset >= scanline ) {
+                    TIFFErrorExt(tif->tif_clientdata, module, "Invalid data for scanline %ld",
+                        (long) tif->tif_row);
+                    return (0);
+                }
 				if (cc == 0)
 					goto bad;
 				n = *bp++, cc--;
